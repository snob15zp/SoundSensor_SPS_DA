<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out_DA14531\Objects\secondary_bootloader_531.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out_DA14531\Objects\secondary_bootloader_531.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Sep 23 23:30:06 2022
<BR><P>
<H3>Maximum Stack Usage =        424 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; spi_loadActiveImage &rArr; loadActiveImage &rArr; Decrypt_Image &rArr; AES_cbc_decrypt &rArr; AES_decrypt
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_Handler</a> from adc_531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[e]">BLE_RF_DIAG_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[6]">BLE_WAKEUP_LP_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[19]">DMA_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[10]">GPIO0_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[11]">GPIO1_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[12]">GPIO2_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[13]">GPIO3_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[14]">GPIO4_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[22]">HardFault_HandlerC</a> from hardfault_handler.o(.text) referenced from startup_da14531.o(.text)
 <LI><a href="#[a]">I2C_Handler</a> from i2c.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[d]">KEYBRD_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[21]">NMI_HandlerC</a> from nmi_handler.o(.text) referenced from startup_da14531.o(.text)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[1b]">RESERVED21_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[1c]">RESERVED22_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[1d]">RESERVED23_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[f]">RFCAL_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[18]">RTC_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[b]">SPI_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[17]">SWTIM1_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[15]">SWTIM_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from systick.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[1f]">SystemInit</a> from system_da14531.o(.text) referenced from startup_da14531.o(.text)
 <LI><a href="#[9]">UART2_Handler</a> from uart.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[8]">UART_Handler</a> from uart.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[16]">WKUP_QUADEC_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[1a]">XTAL32M_RDY_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[20]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_da14531.o(.text)
 <LI><a href="#[1e]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[7]">rwble_isr</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[20]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[23]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[26]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[8b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[8c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[8d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[8e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1f]"></a>SystemInit</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, system_da14531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(.text)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>BLE_RF_DIAG_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BLE_WAKEUP_LP_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>GPIO0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>GPIO1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>GPIO2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GPIO3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GPIO4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>KEYBRD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RESERVED21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>RESERVED22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RESERVED23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RFCAL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>RTC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SPI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SWTIM1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SWTIM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>WKUP_QUADEC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>XTAL32M_RDY_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>rwble_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[8f]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[91]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[92]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[22]"></a>HardFault_HandlerC</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hardfault_handler.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>NMI_HandlerC</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, nmi_handler.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>spi_loadActiveImage</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = spi_loadActiveImage &rArr; loadActiveImage &rArr; Decrypt_Image &rArr; AES_cbc_decrypt &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable_with_autodetect
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_env
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_peripheral_init
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadActiveImage
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[32]"></a>spi_flash_read_status_reg</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
</UL>

<P><STRONG><a name="[35]"></a>spi_flash_is_busy</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>

<P><STRONG><a name="[36]"></a>spi_flash_release_from_power_down</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = spi_flash_release_from_power_down &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable_with_autodetect
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable
</UL>

<P><STRONG><a name="[2e]"></a>spi_flash_configure_env</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, spi_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_loadActiveImage
</UL>

<P><STRONG><a name="[31]"></a>spi_flash_enable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = spi_flash_enable &rArr; spi_initialize &rArr; spi_set_speed &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_env
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_peripheral_init
</UL>

<P><STRONG><a name="[3a]"></a>spi_flash_read_jedec_id</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
</UL>

<P><STRONG><a name="[3c]"></a>spi_flash_auto_detect</STRONG> (Thumb, 94 bytes, Stack size 128 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = spi_flash_auto_detect &rArr; spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_env
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable_with_autodetect
</UL>

<P><STRONG><a name="[2d]"></a>spi_flash_enable_with_autodetect</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = spi_flash_enable_with_autodetect &rArr; spi_flash_auto_detect &rArr; spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_loadActiveImage
</UL>

<P><STRONG><a name="[2f]"></a>spi_flash_read_data</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = spi_flash_read_data &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
</UL>

<P><STRONG><a name="[40]"></a>GPIO_SetPinFunction</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SetPinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>

<P><STRONG><a name="[3f]"></a>GPIO_SetInactive</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>

<P><STRONG><a name="[3e]"></a>GPIO_SetActive</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>

<P><STRONG><a name="[30]"></a>GPIO_ConfigurePin</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetActive
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_run_user_application
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_peripheral_init
</UL>

<P><STRONG><a name="[41]"></a>Start_run_user_application</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Start_run_user_application &rArr; GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_disable
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>main</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = main &rArr; spi_loadActiveImage &rArr; loadActiveImage &rArr; Decrypt_Image &rArr; AES_cbc_decrypt &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_run_user_application
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetActive
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_loadActiveImage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2a]"></a>crc32</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, crc32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadActiveImage
</UL>

<P><STRONG><a name="[44]"></a>AES_set_key</STRONG> (Thumb, 296 bytes, Stack size 48 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = AES_set_key &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_Image
</UL>

<P><STRONG><a name="[49]"></a>AES_convert_key</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AES_convert_key
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_Image
</UL>

<P><STRONG><a name="[48]"></a>AES_decrypt</STRONG> (Thumb, 492 bytes, Stack size 112 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = AES_decrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_decrypt
</UL>

<P><STRONG><a name="[47]"></a>AES_cbc_decrypt</STRONG> (Thumb, 180 bytes, Stack size 144 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = AES_cbc_decrypt &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_decrypt
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_Image
</UL>

<P><STRONG><a name="[29]"></a>Decrypt_Image</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, decrypt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Decrypt_Image &rArr; AES_cbc_decrypt &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_decrypt
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_convert_key
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_key
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadActiveImage
</UL>

<P><STRONG><a name="[4a]"></a>spi_set_speed</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, spi_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = spi_set_speed &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
</UL>

<P><STRONG><a name="[4c]"></a>spi_enable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, spi_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
</UL>

<P><STRONG><a name="[42]"></a>spi_disable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, spi_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_run_user_application
</UL>

<P><STRONG><a name="[4d]"></a>spi_set_cp_mode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, spi_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
</UL>

<P><STRONG><a name="[33]"></a>spi_set_bitmode</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, spi_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>

<P><STRONG><a name="[39]"></a>spi_initialize</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, spi_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = spi_initialize &rArr; spi_set_speed &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_cp_mode
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_speed
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable_with_autodetect
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable
</UL>

<P><STRONG><a name="[37]"></a>spi_cs_low</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, spi_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>

<P><STRONG><a name="[38]"></a>spi_cs_high</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, spi_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>

<P><STRONG><a name="[3b]"></a>spi_access</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, spi_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_access
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>

<P><STRONG><a name="[34]"></a>spi_transaction</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, spi_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
</UL>

<P><STRONG><a name="[a]"></a>I2C_Handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UART_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_Handler &rArr; uart_intr_hndl &rArr; uart_tx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UART2_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART2_Handler &rArr; uart_intr_hndl &rArr; uart_tx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, systick.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>syscntl_dcdc_get_level</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, syscntl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dcdc_cfg
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_turn_on_in_boost
</UL>

<P><STRONG><a name="[57]"></a>syscntl_dcdc_set_level</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, syscntl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_disable
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dcdc_cfg
</UL>

<P><STRONG><a name="[52]"></a>syscntl_dcdc_turn_on_in_boost</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, syscntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = syscntl_dcdc_turn_on_in_boost
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_is_dcdc_reserved
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_get_level
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dcdc_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
</UL>

<P><STRONG><a name="[58]"></a>hw_otpc_enter_mode</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, hw_otpc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hw_otpc_enter_mode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dcdc_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[53]"></a>hw_otpc_is_dcdc_reserved</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hw_otpc_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_turn_on_in_boost
</UL>

<P><STRONG><a name="[5b]"></a>hw_otpc_set_speed</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hw_otpc_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_init
</UL>

<P><STRONG><a name="[5a]"></a>hw_otpc_init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, hw_otpc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hw_otpc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_set_speed
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_get_level
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[5c]"></a>hw_otpc_disable</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, hw_otpc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hw_otpc_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_set_level
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[c]"></a>ADC_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc_531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>otp_cs_get_xtal32m_trim_value</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, otp_cs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[61]"></a>set_xtal32m_trim_value</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_xtal32m_trim_value
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[43]"></a>system_init</STRONG> (Thumb, 370 bytes, Stack size 24 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = system_init &rArr; otp_cs_store &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_disable
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_enter_mode
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_indication (Weak Reference)
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_xtal32m_trim_value
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_store
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_get_xtal32m_trim_value
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>periph_init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, user_periph_setup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = periph_init &rArr; syscntl_dcdc_turn_on_in_boost
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_turn_on_in_boost
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_speed
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_key
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_decrypt
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_key
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_store
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hw_otpc_531.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_enter_mode
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_store
</UL>

<P><STRONG><a name="[5d]"></a>GPIO_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(system_init_run_once))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[5f]"></a>otp_cs_store</STRONG> (Thumb, 472 bytes, Stack size 40 bytes, otp_cs.o(system_init_run_once))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = otp_cs_store &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[25]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system_da14531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>loadActiveImage</STRONG> (Thumb, 378 bytes, Stack size 120 bytes, bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = loadActiveImage &rArr; Decrypt_Image &rArr; AES_cbc_decrypt &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_Image
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_loadActiveImage
</UL>

<P><STRONG><a name="[28]"></a>FlashRead</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = FlashRead &rArr; spi_flash_read_data &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadActiveImage
</UL>

<P><STRONG><a name="[2c]"></a>spi_flash_peripheral_init</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = spi_flash_peripheral_init &rArr; spi_flash_enable &rArr; spi_initialize &rArr; spi_set_speed &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_loadActiveImage
</UL>

<P><STRONG><a name="[4e]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Handler
</UL>

<P><STRONG><a name="[50]"></a>uart_rx_isr</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_rx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>

<P><STRONG><a name="[4f]"></a>uart_intr_hndl</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_intr_hndl &rArr; uart_tx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx_isr
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>

<P><STRONG><a name="[51]"></a>uart_tx_isr</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_tx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>

<P><STRONG><a name="[55]"></a>dcdc_cfg</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, syscntl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_turn_on_in_boost
</UL>

<P><STRONG><a name="[56]"></a>dcdc_cfg</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, hw_otpc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dcdc_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_set_level
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_get_level
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_enter_mode
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[5e]"></a>reset_indication</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>
<HR></body></html>
